generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model adonis_schema {
  id             Int       @id @default(autoincrement()) @db.UnsignedInt
  name           String?   @db.VarChar(255)
  batch          Int?
  migration_time DateTime? @default(now()) @db.Timestamp(0)
}

model am_checklist_schedule_projects {
  id                         String                       @id @unique(map: "am_checklist_schedule_projects_id_unique") @db.VarChar(255)
  am_schedule_project_id     String?                      @db.VarChar(255)
  am_checklist_id            String?                      @db.VarChar(255)
  is_deleted                 Boolean?                     @default(false)
  created_by_user            String?                      @db.VarChar(255)
  created_at                 DateTime?                    @db.DateTime(0)
  updated_at                 DateTime?                    @db.DateTime(0)
  am_checklists              am_checklists?               @relation(fields: [am_checklist_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_checklist_schedule_projects_am_checklist_id_foreign")
  am_schedule_projects       am_schedule_projects?        @relation(fields: [am_schedule_project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_checklist_schedule_projects_am_schedule_project_id_foreign")
  users                      users?                       @relation(fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_checklist_schedule_projects_created_by_user_foreign")
  am_project_item_checklists am_project_item_checklists[]

  @@index([am_checklist_id], map: "am_checklist_schedule_projects_am_checklist_id_foreign")
  @@index([am_schedule_project_id], map: "am_checklist_schedule_projects_am_schedule_project_id_foreign")
  @@index([created_by_user], map: "am_checklist_schedule_projects_created_by_user_foreign")
}

model am_checklists {
  id                             String                           @id @unique(map: "am_checklists_id_unique") @db.VarChar(255)
  name                           String                           @db.VarChar(255)
  description                    String?                          @db.Text
  is_deleted                     Boolean?                         @default(false)
  created_by_user                String?                          @db.VarChar(255)
  created_at                     DateTime?                        @db.DateTime(0)
  updated_at                     DateTime?                        @db.DateTime(0)
  users                          users?                           @relation(fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_checklists_created_by_user_foreign")
  am_checklist_schedule_projects am_checklist_schedule_projects[]
  am_item_checklists             am_item_checklists[]

  @@index([created_by_user], map: "am_checklists_created_by_user_foreign")
}

model am_item_checklists {
  id                         String                       @id @unique(map: "am_item_checklists_id_unique") @db.VarChar(255)
  name                       String                       @db.VarChar(255)
  description                String?                      @db.Text
  is_deleted                 Boolean?                     @default(false)
  am_checklist_id            String?                      @db.VarChar(255)
  created_by_user            String?                      @db.VarChar(255)
  created_at                 DateTime?                    @db.DateTime(0)
  updated_at                 DateTime?                    @db.DateTime(0)
  am_checklists              am_checklists?               @relation(fields: [am_checklist_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_item_checklists_am_checklist_id_foreign")
  users                      users?                       @relation(fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_item_checklists_created_by_user_foreign")
  am_project_item_checklists am_project_item_checklists[]

  @@index([am_checklist_id], map: "am_item_checklists_am_checklist_id_foreign")
  @@index([created_by_user], map: "am_item_checklists_created_by_user_foreign")
}

model am_notes {
  id                           String                      @id @unique(map: "am_notes_id_unique") @db.VarChar(255)
  type                         am_notes_type               @default(text)
  filename_display             String?                     @db.VarChar(255)
  extension                    String?                     @db.VarChar(255)
  file                         String?                     @db.VarChar(255)
  text                         String?                     @db.Text
  is_deleted                   Boolean?                    @default(false)
  am_project_item_checklist_id String?                     @db.VarChar(255)
  created_by_user              String?                     @db.VarChar(255)
  created_at                   DateTime?                   @db.DateTime(0)
  updated_at                   DateTime?                   @db.DateTime(0)
  am_project_item_checklists   am_project_item_checklists? @relation(fields: [am_project_item_checklist_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_notes_am_project_item_checklist_id_foreign")
  users                        users?                      @relation(fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_notes_created_by_user_foreign")

  @@index([am_project_item_checklist_id], map: "am_notes_am_project_item_checklist_id_foreign")
  @@index([created_by_user], map: "am_notes_created_by_user_foreign")
}

model am_project_item_checklists {
  id                             String                          @id @unique(map: "am_project_item_checklists_id_unique") @db.VarChar(255)
  done                           Boolean?                        @default(false)
  is_deleted                     Boolean?                        @default(false)
  am_item_checklist_id           String?                         @db.VarChar(255)
  am_checklist_project_id        String?                         @db.VarChar(255)
  created_at                     DateTime?                       @db.DateTime(0)
  updated_at                     DateTime?                       @db.DateTime(0)
  am_checklist_schedule_projects am_checklist_schedule_projects? @relation(fields: [am_checklist_project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_project_item_checklists_am_checklist_project_id_foreign")
  am_item_checklists             am_item_checklists?             @relation(fields: [am_item_checklist_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_project_item_checklists_am_item_checklist_id_foreign")
  am_notes                       am_notes[]

  @@index([am_checklist_project_id], map: "am_project_item_checklists_am_checklist_project_id_foreign")
  @@index([am_item_checklist_id], map: "am_project_item_checklists_am_item_checklist_id_foreign")
}

model am_projects {
  id                                   String     @id @unique(map: "am_projects_id_unique") @db.VarChar(255)
  template_id                          String?    @db.VarChar(255)
  key_field                            String?    @db.VarChar(255)
  label                                String?    @db.VarChar(255)
  fields_mappeds                       String?    @db.Text
  created_by_user                      String?    @db.VarChar(255)
  created_at                           DateTime?  @db.DateTime(0)
  updated_at                           DateTime?  @db.DateTime(0)
  users                                users?     @relation(fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_projects_created_by_user_foreign")
  fields_am_projects_key_fieldTofields fields?    @relation("am_projects_key_fieldTofields", fields: [key_field], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_projects_key_field_foreign")
  fields_am_projects_labelTofields     fields?    @relation("am_projects_labelTofields", fields: [label], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_projects_label_foreign")
  templates                            templates? @relation(fields: [template_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_projects_template_id_foreign")

  @@index([created_by_user], map: "am_projects_created_by_user_foreign")
  @@index([key_field], map: "am_projects_key_field_foreign")
  @@index([label], map: "am_projects_label_foreign")
  @@index([template_id], map: "am_projects_template_id_foreign")
}

model am_reports {
  id                                            String     @id @unique(map: "am_reports_id_unique") @db.VarChar(255)
  template_id                                   String?    @db.VarChar(255)
  key_field                                     String?    @db.VarChar(255)
  physical_execution                            String?    @db.VarChar(255)
  financial_execution                           String?    @db.VarChar(255)
  created_by_user                               String?    @db.VarChar(255)
  created_at                                    DateTime?  @db.DateTime(0)
  updated_at                                    DateTime?  @db.DateTime(0)
  users                                         users?     @relation(fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_reports_created_by_user_foreign")
  fields_am_reports_financial_executionTofields fields?    @relation("am_reports_financial_executionTofields", fields: [financial_execution], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_reports_financial_execution_foreign")
  fields_am_reports_key_fieldTofields           fields?    @relation("am_reports_key_fieldTofields", fields: [key_field], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_reports_key_field_foreign")
  fields_am_reports_physical_executionTofields  fields?    @relation("am_reports_physical_executionTofields", fields: [physical_execution], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_reports_physical_execution_foreign")
  templates                                     templates? @relation(fields: [template_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_reports_template_id_foreign")

  @@index([created_by_user], map: "am_reports_created_by_user_foreign")
  @@index([financial_execution], map: "am_reports_financial_execution_foreign")
  @@index([key_field], map: "am_reports_key_field_foreign")
  @@index([physical_execution], map: "am_reports_physical_execution_foreign")
  @@index([template_id], map: "am_reports_template_id_foreign")
}

model am_schedule_project_notes {
  id                     String                         @id @unique(map: "am_schedule_project_notes_id_unique") @db.VarChar(255)
  type                   am_schedule_project_notes_type @default(text)
  filename_display       String?                        @db.VarChar(255)
  extension              String?                        @db.VarChar(255)
  file                   String?                        @db.VarChar(255)
  text                   String?                        @db.Text
  is_deleted             Boolean?                       @default(false)
  am_schedule_project_id String?                        @db.VarChar(255)
  created_by_user        String?                        @db.VarChar(255)
  created_at             DateTime?                      @db.DateTime(0)
  updated_at             DateTime?                      @db.DateTime(0)
  am_schedule_projects   am_schedule_projects?          @relation(fields: [am_schedule_project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_schedule_project_notes_am_schedule_project_id_foreign")
  users                  users?                         @relation(fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_schedule_project_notes_created_by_user_foreign")

  @@index([am_schedule_project_id], map: "am_schedule_project_notes_am_schedule_project_id_foreign")
  @@index([created_by_user], map: "am_schedule_project_notes_created_by_user_foreign")
}

model am_schedule_projects {
  id                             String                           @id @unique(map: "am_schedule_projects_id_unique") @db.VarChar(255)
  am_visit_type_id               String?                          @db.VarChar(255)
  description                    String?                          @db.Text
  status                         am_schedule_projects_status      @default(pending)
  location                       String?                          @db.VarChar(255)
  am_schedule_id                 String?                          @db.VarChar(255)
  project_id                     String?                          @db.VarChar(255)
  is_deleted                     Boolean?                         @default(false)
  created_at                     DateTime?                        @db.DateTime(0)
  updated_at                     DateTime?                        @db.DateTime(0)
  am_schedules                   am_schedules?                    @relation(fields: [am_schedule_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_schedule_projects_am_schedule_id_foreign")
  am_visit_types                 am_visit_types?                  @relation(fields: [am_visit_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_schedule_projects_am_visit_type_id_foreign")
  am_checklist_schedule_projects am_checklist_schedule_projects[]
  am_schedule_project_notes      am_schedule_project_notes[]

  @@index([am_schedule_id], map: "am_schedule_projects_am_schedule_id_foreign")
  @@index([am_visit_type_id], map: "am_schedule_projects_am_visit_type_id_foreign")
}

model am_schedule_types {
  id              String         @id @unique(map: "am_schedule_types_id_unique") @db.VarChar(255)
  name            String         @db.VarChar(255)
  description     String?        @db.Text
  is_deleted      Boolean?       @default(false)
  created_by_user String?        @db.VarChar(255)
  created_at      DateTime?      @db.DateTime(0)
  updated_at      DateTime?      @db.DateTime(0)
  users           users?         @relation(fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_schedule_types_created_by_user_foreign")
  am_schedules    am_schedules[]

  @@index([created_by_user], map: "am_schedule_types_created_by_user_foreign")
}

model am_schedules {
  id                                        String                  @id @unique(map: "am_schedules_id_unique") @db.VarChar(255)
  name                                      String                  @db.VarChar(255)
  description                               String?                 @db.Text
  am_schedule_type_id                       String?                 @db.VarChar(255)
  user_id                                   String?                 @db.VarChar(255)
  end_date                                  DateTime                @db.DateTime(0)
  start_date                                DateTime                @db.DateTime(0)
  is_deleted                                Boolean?                @default(false)
  created_by_user                           String?                 @db.VarChar(255)
  created_at                                DateTime?               @db.DateTime(0)
  updated_at                                DateTime?               @db.DateTime(0)
  am_schedule_types                         am_schedule_types?      @relation(fields: [am_schedule_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_schedules_am_schedule_type_id_foreign")
  users_am_schedules_created_by_userTousers users?                  @relation("am_schedules_created_by_userTousers", fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_schedules_created_by_user_foreign")
  users_am_schedules_user_idTousers         users?                  @relation("am_schedules_user_idTousers", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_schedules_user_id_foreign")
  am_schedule_projects                      am_schedule_projects[]
  am_visit_participants                     am_visit_participants[]

  @@index([am_schedule_type_id], map: "am_schedules_am_schedule_type_id_foreign")
  @@index([created_by_user], map: "am_schedules_created_by_user_foreign")
  @@index([user_id], map: "am_schedules_user_id_foreign")
}

model am_visit_participants {
  id                                                 String        @id @unique(map: "am_visit_participants_id_unique") @db.VarChar(255)
  user_id                                            String?       @db.VarChar(255)
  am_schedule_id                                     String?       @db.VarChar(255)
  description                                        String?       @db.Text
  is_deleted                                         Boolean?      @default(false)
  created_by_user                                    String?       @db.VarChar(255)
  created_at                                         DateTime?     @db.DateTime(0)
  updated_at                                         DateTime?     @db.DateTime(0)
  am_schedules                                       am_schedules? @relation(fields: [am_schedule_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_visit_participants_am_schedule_id_foreign")
  users_am_visit_participants_created_by_userTousers users?        @relation("am_visit_participants_created_by_userTousers", fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_visit_participants_created_by_user_foreign")
  users_am_visit_participants_user_idTousers         users?        @relation("am_visit_participants_user_idTousers", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_visit_participants_user_id_foreign")

  @@index([am_schedule_id], map: "am_visit_participants_am_schedule_id_foreign")
  @@index([created_by_user], map: "am_visit_participants_created_by_user_foreign")
  @@index([user_id], map: "am_visit_participants_user_id_foreign")
}

model am_visit_types {
  id                   String                 @id @unique(map: "am_visit_types_id_unique") @db.VarChar(255)
  name                 String                 @db.VarChar(255)
  description          String?                @db.Text
  is_deleted           Boolean?               @default(false)
  created_by_user      String?                @db.VarChar(255)
  created_at           DateTime?              @db.DateTime(0)
  updated_at           DateTime?              @db.DateTime(0)
  users                users?                 @relation(fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "am_visit_types_created_by_user_foreign")
  am_schedule_projects am_schedule_projects[]

  @@index([created_by_user], map: "am_visit_types_created_by_user_foreign")
}

model applications {
  id         String    @id @unique(map: "applications_id_unique") @db.VarChar(255)
  name       String    @db.VarChar(255)
  apikey     String    @unique(map: "applications_apikey_unique") @db.VarChar(60)
  user_id    String    @db.VarChar(255)
  is_deleted Boolean?  @default(false)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime? @db.DateTime(0)
  users      users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "applications_user_id_foreign")

  @@index([apikey], map: "applications_apikey_index")
  @@index([user_id], map: "applications_user_id_foreign")
}

model bi_11matriz_teste_resub {
  id            String    @id @unique(map: "bi_11matriz_teste_resub_id_unique") @db.VarChar(255)
  nome          String?   @db.VarChar(255)
  obs           String?   @db.Text
  numero        Int?
  versao        String?   @db.VarChar(100)
  estado        String    @db.VarChar(255)
  id_utilizador String    @db.VarChar(255)
  id_template   String    @db.VarChar(255)
  id_organismo  String    @db.VarChar(255)
  created_at    DateTime? @db.DateTime(0)
  updated_at    DateTime? @db.DateTime(0)
  status        status    @relation(fields: [estado], references: [slug], onDelete: NoAction, onUpdate: NoAction, map: "qMTLVUEI")
  organisms     organisms @relation(fields: [id_organismo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "q-1rZi0_")
  templates     templates @relation(fields: [id_template], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "M02HQwJM")
  users         users     @relation(fields: [id_utilizador], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "8r2Moi7p")

  @@index([id_utilizador], map: "8r2Moi7p")
  @@index([id_template], map: "M02HQwJM")
  @@index([id_organismo], map: "q-1rZi0_")
  @@index([estado], map: "qMTLVUEI")
}

model bi_8_fornecedores {
  id                                                                                                                          String                                   @id @unique(map: "bi_8_fornecedores_id_unique") @db.VarChar(255)
  designacao_do_projecto                                                                                                      String                                   @db.VarChar(255)
  umape_id                                                                                                                    String                                   @db.VarChar(255)
  fim_de_fornecimento                                                                                                         DateTime?                                @db.Date
  descricao_dos_servicosfornecimentos                                                                                         String?                                  @db.Text
  designacao_do_fornecedor                                                                                                    String?                                  @db.VarChar(255)
  valor_da_prestacao_de_servicofornecimen                                                                                     Decimal?                                 @db.Decimal(64, 10)
  inicio_de_fornecimento                                                                                                      DateTime?                                @db.Date
  nif                                                                                                                         Int?
  versao                                                                                                                      String?                                  @db.VarChar(100)
  estado                                                                                                                      String                                   @db.VarChar(255)
  id_utilizador                                                                                                               String                                   @db.VarChar(255)
  id_template                                                                                                                 String                                   @db.VarChar(255)
  id_organismo                                                                                                                String                                   @db.VarChar(255)
  created_at                                                                                                                  DateTime?                                @db.DateTime(0)
  updated_at                                                                                                                  DateTime?                                @db.DateTime(0)
  bi_ficha_identificacao_de_projectos_fips_bi_8_fornecedores_designacao_do_projectoTobi_ficha_identificacao_de_projectos_fips bi_ficha_identificacao_de_projectos_fips @relation("bi_8_fornecedores_designacao_do_projectoTobi_ficha_identificacao_de_projectos_fips", fields: [designacao_do_projecto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "eSlVHJBG")
  status                                                                                                                      status                                   @relation(fields: [estado], references: [slug], onDelete: NoAction, onUpdate: NoAction, map: "K6Qpk3zy")
  organisms                                                                                                                   organisms                                @relation(fields: [id_organismo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "rHDQ9SMz")
  templates                                                                                                                   templates                                @relation(fields: [id_template], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "MuoQG1F1")
  users                                                                                                                       users                                    @relation(fields: [id_utilizador], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "5VTGbe-T")
  bi_ficha_identificacao_de_projectos_fips_bi_8_fornecedores_umape_idTobi_ficha_identificacao_de_projectos_fips               bi_ficha_identificacao_de_projectos_fips @relation("bi_8_fornecedores_umape_idTobi_ficha_identificacao_de_projectos_fips", fields: [umape_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "WPVNl1XN")

  @@index([id_utilizador], map: "5VTGbe-T")
  @@index([estado], map: "K6Qpk3zy")
  @@index([id_template], map: "MuoQG1F1")
  @@index([designacao_do_projecto], map: "bi_8_fornecedores_designacao_do_projecto_index")
  @@index([umape_id], map: "bi_8_fornecedores_umape_id_index")
  @@index([id_organismo], map: "rHDQ9SMz")
}

model bi_actividades {
  id                                       String                                   @id @unique(map: "bi_actividades_id_unique") @db.VarChar(255)
  execucao_fisica_acumulada_prevista       Int?
  inicio_da_actividade                     DateTime?                                @db.Date
  prazo_em_meses                           Int?
  execucao_fisica_acumulada_realizada      Int?
  fim_da_actividade                        DateTime?                                @db.Date
  umape_id                                 String                                   @db.VarChar(255)
  designacao_do_projecto                   String?                                  @db.VarChar(255)
  observacoes                              String?                                  @db.Text
  actividades                              String?                                  @db.VarChar(255)
  percent_da_actividade_peso               Int?
  versao                                   String?                                  @db.VarChar(100)
  estado                                   String                                   @db.VarChar(255)
  id_utilizador                            String                                   @db.VarChar(255)
  id_template                              String                                   @db.VarChar(255)
  id_organismo                             String                                   @db.VarChar(255)
  created_at                               DateTime?                                @db.DateTime(0)
  updated_at                               DateTime?                                @db.DateTime(0)
  anexar_arquivo                           String?                                  @db.VarChar(255)
  status                                   status                                   @relation(fields: [estado], references: [slug], onDelete: NoAction, onUpdate: NoAction, map: "-BdYOgjY")
  organisms                                organisms                                @relation(fields: [id_organismo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Ag9F3lfk")
  templates                                templates                                @relation(fields: [id_template], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "vKqMc1BP")
  users                                    users                                    @relation(fields: [id_utilizador], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "EHia4qgF")
  bi_ficha_identificacao_de_projectos_fips bi_ficha_identificacao_de_projectos_fips @relation(fields: [umape_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "lnfzKHcJ")
  bi_relatorio_de_actividades              bi_relatorio_de_actividades[]

  @@index([estado], map: "-BdYOgjY")
  @@index([id_organismo], map: "Ag9F3lfk")
  @@index([id_utilizador], map: "EHia4qgF")
  @@index([umape_id], map: "bi_actividades_umape_id_index")
  @@index([id_template], map: "vKqMc1BP")
}

model bi_cronograma_financeiros {
  id                                       String                                   @id @unique(map: "bi_cronograma_financeiro_id_unique") @db.VarChar(255)
  data                                     DateTime?                                @db.Date
  observacoes                              String?                                  @db.Text
  umape_id                                 String                                   @db.VarChar(255)
  e_downpayment                            Boolean?
  descricao_do_marco_de_facturacao         String?                                  @db.Text
  moeda                                    String?                                  @db.VarChar(255)
  designacao_do_projecto                   String?                                  @db.VarChar(255)
  valor_da_factura                         Decimal?                                 @db.Decimal(64, 10)
  versao                                   String?                                  @db.VarChar(100)
  estado                                   String                                   @db.VarChar(255)
  id_utilizador                            String                                   @db.VarChar(255)
  id_template                              String                                   @db.VarChar(255)
  id_organismo                             String                                   @db.VarChar(255)
  created_at                               DateTime?                                @db.DateTime(0)
  updated_at                               DateTime?                                @db.DateTime(0)
  status                                   status                                   @relation(fields: [estado], references: [slug], onDelete: NoAction, onUpdate: NoAction, map: "3Xsf7VNw")
  organisms                                organisms                                @relation(fields: [id_organismo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "hkAAaaNj")
  templates                                templates                                @relation(fields: [id_template], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "EXLpJAuC")
  users                                    users                                    @relation(fields: [id_utilizador], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "z-2PelTC")
  bi_ficha_identificacao_de_projectos_fips bi_ficha_identificacao_de_projectos_fips @relation(fields: [umape_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Dz8a5d7G")

  @@index([estado], map: "3Xsf7VNw")
  @@index([id_template], map: "EXLpJAuC")
  @@index([umape_id], map: "bi_cronograma_financeiro_umape_id_index")
  @@index([id_organismo], map: "hkAAaaNj")
  @@index([id_utilizador], map: "z-2PelTC")
}

model bi_ficha_identificacao_de_projectos_fips {
  id                                                                                                   String                                     @id @unique(map: "bi_ficha_identificacao_de_projectos_fip_id_unique") @db.VarChar(255)
  funcional                                                                                            String?                                    @db.VarChar(255)
  organismo_responsavel                                                                                String?                                    @db.VarChar(255)
  umape_id                                                                                             String?                                    @db.VarChar(255)
  territorial                                                                                          String?                                    @db.VarChar(255)
  adjudicatario                                                                                        String?                                    @db.VarChar(255)
  cambio_da_moeda_de_estudos                                                                           Decimal?                                   @db.Decimal(64, 10)
  estimativa_dos_custos_totais_dos_estudos                                                             Decimal?                                   @db.Decimal(64, 10)
  designacao_do_projecto                                                                               String?                                    @db.VarChar(255)
  fim_projecto_de_estudos                                                                              DateTime?                                  @db.Date
  intersectorial_projecto_multissectoria                                                               String?                                    @db.VarChar(255)
  impacto_esperado                                                                                     String?                                    @db.Text
  descricao_sumaria                                                                                    String?                                    @db.Text
  prazo_de_financiamento_meses                                                                         Int?
  natureza_do_investimento                                                                             String?                                    @db.VarChar(255)
  objectivo_final                                                                                      String?                                    @db.Text
  observacoes                                                                                          String?                                    @db.Text
  ambito_geografico                                                                                    String?                                    @db.VarChar(255)
  inicio_da_execucao_projecto                                                                          DateTime?                                  @db.Date
  municipio                                                                                            String?                                    @db.VarChar(255)
  cambio_da_moeda_do_contrato                                                                          Int?
  economico_da_despesa                                                                                 String?                                    @db.VarChar(255)
  duracao_da_execucao_projecto_meses                                                                   Int?
  nif                                                                                                  String?                                    @db.VarChar(255)
  tipo                                                                                                 String?                                    @db.VarChar(255)
  fim_da_execucao_projecto                                                                             DateTime?                                  @db.Date
  valor_global_do_contrato                                                                             Decimal?                                   @db.Decimal(64, 10)
  inicio_projecto_de_estudos                                                                           DateTime?                                  @db.Date
  provincia                                                                                            String                                     @db.VarChar(255)
  tipo_de_projecto                                                                                     String?                                    @db.VarChar(255)
  pdn_programa                                                                                         String                                     @db.VarChar(255)
  moeda_contrato                                                                                       String?                                    @db.VarChar(255)
  fonte_de_financiamento                                                                               String?                                    @db.VarChar(255)
  moeda_estudos                                                                                        String?                                    @db.VarChar(255)
  adenda                                                                                               String?                                    @db.VarChar(255)
  versao                                                                                               String?                                    @db.VarChar(100)
  estado                                                                                               String                                     @db.VarChar(255)
  id_utilizador                                                                                        String                                     @db.VarChar(255)
  id_template                                                                                          String                                     @db.VarChar(255)
  id_organismo                                                                                         String                                     @db.VarChar(255)
  created_at                                                                                           DateTime?                                  @db.DateTime(0)
  updated_at                                                                                           DateTime?                                  @db.DateTime(0)
  status                                                                                               status                                     @relation(fields: [estado], references: [slug], onDelete: NoAction, onUpdate: NoAction, map: "VHFchnmq")
  organisms                                                                                            organisms                                  @relation(fields: [id_organismo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "j9PBSzNI")
  templates                                                                                            templates                                  @relation(fields: [id_template], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cuWzyQER")
  users                                                                                                users                                      @relation(fields: [id_utilizador], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "6lSBv2xr")
  bi_plano_desenvolvimento_nacional_20182022                                                           bi_plano_desenvolvimento_nacional_20182022 @relation(fields: [pdn_programa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "UusVjaXa")
  bi_8_fornecedores_bi_8_fornecedores_designacao_do_projectoTobi_ficha_identificacao_de_projectos_fips bi_8_fornecedores[]                        @relation("bi_8_fornecedores_designacao_do_projectoTobi_ficha_identificacao_de_projectos_fips")
  bi_8_fornecedores_bi_8_fornecedores_umape_idTobi_ficha_identificacao_de_projectos_fips               bi_8_fornecedores[]                        @relation("bi_8_fornecedores_umape_idTobi_ficha_identificacao_de_projectos_fips")
  bi_actividades                                                                                       bi_actividades[]
  bi_cronograma_financeiros                                                                            bi_cronograma_financeiros[]
  bi_fontes_de_financiamentos                                                                          bi_fontes_de_financiamentos[]
  bi_relatorio_de_actividades                                                                          bi_relatorio_de_actividades[]
  bi_relatorio_de_projectos                                                                            bi_relatorio_de_projectos[]

  @@index([id_utilizador], map: "6lSBv2xr")
  @@index([estado], map: "VHFchnmq")
  @@index([pdn_programa], map: "bi_ficha_identificacao_de_projectos_fip_pdn_programa_index")
  @@index([id_template], map: "cuWzyQER")
  @@index([id_organismo], map: "j9PBSzNI")
}

model bi_fontes_de_financiamentos {
  id                                       String                                   @id @unique(map: "bi_fontes_de_financiamento_id_unique") @db.VarChar(255)
  umape_id                                 String                                   @db.VarChar(255)
  valor_fonte                              Decimal?                                 @db.Decimal(64, 10)
  entidade                                 String?                                  @db.VarChar(255)
  valor_kz                                 Decimal?                                 @db.Decimal(64, 10)
  observacoes                              String?                                  @db.Text
  moeda_fonte                              String?                                  @db.VarChar(255)
  tipo_de_fonte                            String?                                  @db.VarChar(255)
  designacao_do_projecto                   String?                                  @db.VarChar(255)
  cambio_para_kz                           Decimal?                                 @db.Decimal(64, 10)
  versao                                   String?                                  @db.VarChar(100)
  estado                                   String                                   @db.VarChar(255)
  id_utilizador                            String                                   @db.VarChar(255)
  id_template                              String                                   @db.VarChar(255)
  id_organismo                             String                                   @db.VarChar(255)
  created_at                               DateTime?                                @db.DateTime(0)
  updated_at                               DateTime?                                @db.DateTime(0)
  arquivos_de_medicao                      String?                                  @db.VarChar(255)
  arquivos_2                               String?                                  @db.VarChar(255)
  anexo_de_ficheiro                        String?                                  @db.VarChar(255)
  status                                   status                                   @relation(fields: [estado], references: [slug], onDelete: NoAction, onUpdate: NoAction, map: "ZEQ9C7Gi")
  organisms                                organisms                                @relation(fields: [id_organismo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "XwleeMrB")
  templates                                templates                                @relation(fields: [id_template], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Y_NpxYki")
  users                                    users                                    @relation(fields: [id_utilizador], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Aoj_vbCD")
  bi_ficha_identificacao_de_projectos_fips bi_ficha_identificacao_de_projectos_fips @relation(fields: [umape_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "U9YLeeoq")

  @@index([id_utilizador], map: "Aoj_vbCD")
  @@index([id_organismo], map: "XwleeMrB")
  @@index([id_template], map: "Y_NpxYki")
  @@index([estado], map: "ZEQ9C7Gi")
  @@index([umape_id], map: "bi_fontes_de_financiamento_umape_id_index")
}

model bi_matriz01 {
  id             String    @id @unique(map: "bi_matriz01_id_unique") @db.VarChar(255)
  nome           String?   @db.VarChar(255)
  versao         String?   @db.VarChar(100)
  estado         String    @db.VarChar(255)
  id_utilizador  String    @db.VarChar(255)
  id_template    String    @db.VarChar(255)
  id_organismo   String    @db.VarChar(255)
  created_at     DateTime? @db.DateTime(0)
  updated_at     DateTime? @db.DateTime(0)
  moeda          Decimal?  @db.Decimal(64, 2)
  data_dos_dados DateTime? @db.Date
  status         status    @relation(fields: [estado], references: [slug], onDelete: NoAction, onUpdate: NoAction, map: "x_nHe7Z9")
  organisms      organisms @relation(fields: [id_organismo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "hgBT8D1I")
  templates      templates @relation(fields: [id_template], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "aMj_QsBl")
  users          users     @relation(fields: [id_utilizador], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "_23zzDS5")

  @@index([id_utilizador], map: "_23zzDS5")
  @@index([id_template], map: "aMj_QsBl")
  @@index([id_organismo], map: "hgBT8D1I")
  @@index([estado], map: "x_nHe7Z9")
}

model bi_matriz_teste {
  id            String    @id @unique(map: "bi_matriz_teste_id_unique") @db.VarChar(255)
  arquivo_1     String?   @db.VarChar(255)
  arquivo_2     String?   @db.VarChar(255)
  versao        String?   @db.VarChar(100)
  estado        String    @db.VarChar(255)
  id_utilizador String    @db.VarChar(255)
  id_template   String    @db.VarChar(255)
  id_organismo  String    @db.VarChar(255)
  created_at    DateTime? @db.DateTime(0)
  updated_at    DateTime? @db.DateTime(0)
  status        status    @relation(fields: [estado], references: [slug], onDelete: NoAction, onUpdate: NoAction, map: "4LlHNGxa")
  organisms     organisms @relation(fields: [id_organismo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "XBx19KmQ")
  templates     templates @relation(fields: [id_template], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "0ui7rPSh")
  users         users     @relation(fields: [id_utilizador], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "SJLdTHeF")

  @@index([id_template], map: "0ui7rPSh")
  @@index([estado], map: "4LlHNGxa")
  @@index([id_utilizador], map: "SJLdTHeF")
  @@index([id_organismo], map: "XBx19KmQ")
}

model bi_plano_desenvolvimento_nacional_20182022 {
  id                                       String                                     @id @unique(map: "bi_plano_desenvolvimento_nacional_20182022_id_unique") @db.VarChar(255)
  programa_id                              String?                                    @db.VarChar(255)
  politica_id                              String?                                    @db.VarChar(255)
  politica_nome                            String?                                    @db.VarChar(255)
  programa_nome                            String?                                    @db.VarChar(255)
  eixo_id                                  String?                                    @db.VarChar(255)
  eixo_nome                                String?                                    @db.VarChar(255)
  versao                                   String?                                    @db.VarChar(100)
  estado                                   String                                     @db.VarChar(255)
  id_utilizador                            String                                     @db.VarChar(255)
  id_template                              String                                     @db.VarChar(255)
  id_organismo                             String                                     @db.VarChar(255)
  created_at                               DateTime?                                  @db.DateTime(0)
  updated_at                               DateTime?                                  @db.DateTime(0)
  status                                   status                                     @relation(fields: [estado], references: [slug], onDelete: NoAction, onUpdate: NoAction, map: "2iDQ-jR8")
  organisms                                organisms                                  @relation(fields: [id_organismo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fCiLNghr")
  templates                                templates                                  @relation(fields: [id_template], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "1v2PuXyC")
  users                                    users                                      @relation(fields: [id_utilizador], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "YR0YdOsQ")
  bi_ficha_identificacao_de_projectos_fips bi_ficha_identificacao_de_projectos_fips[]

  @@index([id_template], map: "1v2PuXyC")
  @@index([estado], map: "2iDQ-jR8")
  @@index([id_utilizador], map: "YR0YdOsQ")
  @@index([id_organismo], map: "fCiLNghr")
}

model bi_relatorio_de_actividades {
  id                                       String                                   @id @unique(map: "bi_relatorio_de_actividades_id_unique") @db.VarChar(255)
  execucao_fisica_acumulada_prevista       Int?
  observacoes                              String?                                  @db.Text
  estado_da_actividade                     String?                                  @db.VarChar(255)
  data_dos_dados_do_relatorio              DateTime?                                @db.Date
  actividade_do_projecto                   String                                   @db.VarChar(255)
  prazo_decorrido                          Int?
  constragimentos                          String?                                  @db.VarChar(255)
  designacao_do_projecto                   String?                                  @db.VarChar(255)
  execucao_fisica_acumulada_realizada      Int?
  umape_id                                 String                                   @db.VarChar(255)
  versao                                   String?                                  @db.VarChar(100)
  estado                                   String                                   @db.VarChar(255)
  id_utilizador                            String                                   @db.VarChar(255)
  id_template                              String                                   @db.VarChar(255)
  id_organismo                             String                                   @db.VarChar(255)
  created_at                               DateTime?                                @db.DateTime(0)
  updated_at                               DateTime?                                @db.DateTime(0)
  bi_actividades                           bi_actividades                           @relation(fields: [actividade_do_projecto], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "rEXtwxea")
  status                                   status                                   @relation(fields: [estado], references: [slug], onDelete: NoAction, onUpdate: NoAction, map: "qI40pKFv")
  organisms                                organisms                                @relation(fields: [id_organismo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ybIHdMza")
  templates                                templates                                @relation(fields: [id_template], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "8IqzpUTm")
  users                                    users                                    @relation(fields: [id_utilizador], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "jRhdjkXs")
  bi_ficha_identificacao_de_projectos_fips bi_ficha_identificacao_de_projectos_fips @relation(fields: [umape_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "gWgi5t2b")

  @@index([id_template], map: "8IqzpUTm")
  @@index([actividade_do_projecto], map: "bi_relatorio_de_actividades_actividade_do_projecto_index")
  @@index([umape_id], map: "bi_relatorio_de_actividades_umape_id_index")
  @@index([id_utilizador], map: "jRhdjkXs")
  @@index([estado], map: "qI40pKFv")
  @@index([id_organismo], map: "ybIHdMza")
}

model bi_relatorio_de_projectos {
  id                                       String                                   @id @unique(map: "bi_relatorio_de_projecto_id_unique") @db.VarChar(255)
  designacao_do_projecto                   String?                                  @db.VarChar(255)
  data_dos_dados_do_relatorio              DateTime?                                @db.Date
  prazo_decorrido                          Int?
  observacoes                              String?                                  @db.Text
  valor_facturado_acumulado                Decimal?                                 @db.Decimal(64, 10)
  execucao_financeira_global_realizada     Int?
  execucao_fisica_global_realizada         Int?
  pagamento_acumulado_realizado            Decimal?                                 @db.Decimal(64, 10)
  umape_id                                 String                                   @db.VarChar(255)
  constragimentos                          String?                                  @db.Text
  execucao_fisica_global_prevista          Int?
  estado_do_projecto                       String?                                  @db.VarChar(255)
  execucao_financeira_global_prevista      Int?
  moeda_do_pagamento_realizado             String?                                  @db.VarChar(255)
  versao                                   String?                                  @db.VarChar(100)
  estado                                   String                                   @db.VarChar(255)
  id_utilizador                            String                                   @db.VarChar(255)
  id_template                              String                                   @db.VarChar(255)
  id_organismo                             String                                   @db.VarChar(255)
  created_at                               DateTime?                                @db.DateTime(0)
  updated_at                               DateTime?                                @db.DateTime(0)
  status                                   status                                   @relation(fields: [estado], references: [slug], onDelete: NoAction, onUpdate: NoAction, map: "AzjrSBL3")
  organisms                                organisms                                @relation(fields: [id_organismo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "0b4W7mNC")
  templates                                templates                                @relation(fields: [id_template], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "H3wyX1c1")
  users                                    users                                    @relation(fields: [id_utilizador], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "423dr7as")
  bi_ficha_identificacao_de_projectos_fips bi_ficha_identificacao_de_projectos_fips @relation(fields: [umape_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "hhaJ8Kvp")

  @@index([id_organismo], map: "0b4W7mNC")
  @@index([id_utilizador], map: "423dr7as")
  @@index([estado], map: "AzjrSBL3")
  @@index([id_template], map: "H3wyX1c1")
  @@index([umape_id], map: "bi_relatorio_de_projecto_umape_id_index")
}

model bi_teste02 {
  id            String    @id @unique(map: "bi_teste02_id_unique") @db.VarChar(255)
  nome          String?   @db.VarChar(255)
  versao        String?   @db.VarChar(100)
  estado        String    @db.VarChar(255)
  id_utilizador String    @db.VarChar(255)
  id_template   String    @db.VarChar(255)
  id_organismo  String    @db.VarChar(255)
  created_at    DateTime? @db.DateTime(0)
  updated_at    DateTime? @db.DateTime(0)
  status        status    @relation(fields: [estado], references: [slug], onDelete: NoAction, onUpdate: NoAction, map: "dpawBqHY")
  organisms     organisms @relation(fields: [id_organismo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "GB3KvWCF")
  templates     templates @relation(fields: [id_template], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "PzvHJ9VN")
  users         users     @relation(fields: [id_utilizador], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "6-FX7xuQ")

  @@index([id_utilizador], map: "6-FX7xuQ")
  @@index([id_organismo], map: "GB3KvWCF")
  @@index([id_template], map: "PzvHJ9VN")
  @@index([estado], map: "dpawBqHY")
}

model bi_teste03 {
  id            String    @id @unique(map: "bi_teste03_id_unique") @db.VarChar(255)
  kjjjjjj       String?   @db.VarChar(255)
  versao        String?   @db.VarChar(100)
  estado        String    @db.VarChar(255)
  id_utilizador String    @db.VarChar(255)
  id_template   String    @db.VarChar(255)
  id_organismo  String    @db.VarChar(255)
  created_at    DateTime? @db.DateTime(0)
  updated_at    DateTime? @db.DateTime(0)
  status        status    @relation(fields: [estado], references: [slug], onDelete: NoAction, onUpdate: NoAction, map: "Kt5wXIrs")
  organisms     organisms @relation(fields: [id_organismo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "lwsba1l1")
  templates     templates @relation(fields: [id_template], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Ny6hh6P9")
  users         users     @relation(fields: [id_utilizador], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "zi7BJOE-")

  @@index([estado], map: "Kt5wXIrs")
  @@index([id_template], map: "Ny6hh6P9")
  @@index([id_organismo], map: "lwsba1l1")
  @@index([id_utilizador], map: "zi7BJOE-")
}

model blacklists {
  id           Int                @id @default(autoincrement()) @db.UnsignedInt
  block_date   DateTime           @db.DateTime(0)
  unblock_date DateTime           @db.DateTime(0)
  status       blacklists_status?
  template_id  String             @db.VarChar(255)
  organism_id  String             @db.VarChar(255)
  created_at   DateTime?          @db.DateTime(0)
  updated_at   DateTime?          @db.DateTime(0)
  organisms    organisms          @relation(fields: [organism_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "blacklists_organism_id_foreign")
  templates    templates          @relation(fields: [template_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "blacklists_template_id_foreign")

  @@index([organism_id], map: "blacklists_organism_id_foreign")
  @@index([template_id], map: "blacklists_template_id_foreign")
}

model cities {
  id         String    @id @db.VarChar(255)
  name       String    @db.VarChar(255)
  latitude   Decimal?  @db.Decimal(8, 2)
  longitude  Decimal?  @db.Decimal(8, 2)
  state_id   String    @db.VarChar(255)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime? @db.DateTime(0)
  states     states    @relation(fields: [state_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cities_state_id_foreign")

  @@index([state_id], map: "cities_state_id_index")
}

model components {
  id          String          @id @unique(map: "type_fields_id_unique") @db.VarChar(255)
  name        String?         @db.VarChar(255)
  slug        String?         @unique(map: "type_fields_slug_unique") @db.VarChar(255)
  type        components_type @default(normal)
  depends_of  String?         @db.VarChar(250)
  rule        String?         @db.Text
  is_deleted  Boolean?        @default(false)
  created_at  DateTime?       @db.DateTime(0)
  updated_at  DateTime?       @db.DateTime(0)
  is_system   Boolean?        @default(false)
  properties  Json?
  enum_values String?         @db.VarChar(255)
}

model countries {
  id         String    @id @db.VarChar(255)
  name       String    @db.VarChar(255)
  code       String    @unique(map: "countries_code_unique") @db.VarChar(255)
  capital    String    @db.VarChar(255)
  currency   String?   @db.VarChar(255)
  latitude   Decimal?  @db.Decimal(8, 2)
  longitude  Decimal?  @db.Decimal(8, 2)
  languages  String?   @db.VarChar(255)
  flag       String?   @db.VarChar(255)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime? @db.DateTime(0)
  states     states[]

  @@index([code], map: "countries_code_index")
}

model fields {
  id                                                                    String                    @id @unique(map: "fields_id_unique") @db.VarChar(255)
  name                                                                  String?                   @db.VarChar(255)
  order                                                                 Int
  slug                                                                  String?                   @db.VarChar(255)
  template_id                                                           String                    @db.VarChar(255)
  is_deleted                                                            Boolean?                  @default(false)
  matrix_type                                                           fields_matrix_type?
  created_at                                                            DateTime?                 @db.DateTime(0)
  updated_at                                                            DateTime?                 @db.DateTime(0)
  created_by_user                                                       String?                   @db.VarChar(255)
  type                                                                  fields_type?
  props                                                                 Json?
  users                                                                 users?                    @relation(fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fields_created_by_user_foreign")
  templates                                                             templates                 @relation(fields: [template_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fields_template_id_foreign")
  am_projects_am_projects_key_fieldTofields                             am_projects[]             @relation("am_projects_key_fieldTofields")
  am_projects_am_projects_labelTofields                                 am_projects[]             @relation("am_projects_labelTofields")
  am_reports_am_reports_financial_executionTofields                     am_reports[]              @relation("am_reports_financial_executionTofields")
  am_reports_am_reports_key_fieldTofields                               am_reports[]              @relation("am_reports_key_fieldTofields")
  am_reports_am_reports_physical_executionTofields                      am_reports[]              @relation("am_reports_physical_executionTofields")
  templates_relationships_fieldsTotemplates_relationships_from_field_id templates_relationships[] @relation("fieldsTotemplates_relationships_from_field_id")
  templates_relationships_fieldsTotemplates_relationships_to_field_id   templates_relationships[] @relation("fieldsTotemplates_relationships_to_field_id")

  @@index([created_by_user], map: "fields_created_by_user_foreign")
  @@index([template_id], map: "fields_template_id_foreign")
}

model files {
  id              String    @id @db.VarChar(255)
  extension       String    @db.VarChar(255)
  display_name    String?   @db.VarChar(255)
  url             String?   @db.VarChar(255)
  created_by_user String    @db.VarChar(255)
  created_at      DateTime? @db.DateTime(0)
  updated_at      DateTime? @db.DateTime(0)
  is_organism     Boolean?  @default(true)
  size            BigInt?
  is_deleted      Boolean?  @default(false)
  users           users     @relation(fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "files_created_by_user_foreign")

  @@index([created_by_user], map: "files_created_by_user_foreign")
}

model groups {
  id              String            @id @unique(map: "groups_id_unique") @db.VarChar(255)
  name            String            @db.VarChar(255)
  description     String?           @db.VarChar(255)
  is_deleted      Boolean?          @default(false)
  created_by_user String?           @db.VarChar(255)
  created_at      DateTime?         @db.DateTime(0)
  updated_at      DateTime?         @db.DateTime(0)
  users           users?            @relation(fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "groups_created_by_user_foreign")
  organism_groups organism_groups[]
  template_groups template_groups[]

  @@index([created_by_user], map: "groups_created_by_user_foreign")
}

model locales {
  id         String    @id @unique(map: "locales_id_unique") @db.VarChar(255)
  locale     String    @db.VarChar(255)
  group      String    @db.VarChar(255)
  item       String    @db.VarChar(255)
  text       String?   @db.LongText
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime? @db.DateTime(0)
}

model menus {
  id            String           @id @unique(map: "menus_id_unique") @db.VarChar(255)
  order         Int?
  name          String?          @db.VarChar(255)
  slug          String?          @db.VarChar(255)
  url           String?          @db.VarChar(255)
  icon          String?          @db.VarChar(255)
  permission_id String?          @db.VarChar(255)
  belongsTo     String?          @db.VarChar(255)
  divider       Boolean?         @default(false)
  plataform     menus_plataform?
  is_deleted    Boolean?         @default(false)
  created_at    DateTime?        @db.DateTime(0)
  updated_at    DateTime?        @db.DateTime(0)
  permissions   permissions?     @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "menus_permission_id_foreign")

  @@index([permission_id], map: "menus_permission_id_index")
}

model natures {
  id              String    @id @unique(map: "natures_id_unique") @db.VarChar(255)
  name            String    @db.VarChar(255)
  description     String?   @db.Text
  created_by_user String    @db.VarChar(255)
  is_disabled     Boolean?  @default(false)
  created_at      DateTime? @db.DateTime(0)
  updated_at      DateTime? @db.DateTime(0)
  is_deleted      Boolean?  @default(false)
  users           users     @relation(fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "natures_created_by_user_foreign")
  units           units[]

  @@index([created_by_user], map: "natures_created_by_user_foreign")
}

model notifications {
  id                                        String    @id @unique(map: "notifications_id_unique") @db.VarChar(255)
  system                                    Boolean?  @default(false)
  user_id                                   String?   @db.VarChar(255)
  user_to_notify                            String    @db.VarChar(255)
  type                                      String?   @db.VarChar(255)
  data                                      String?   @db.Text
  read_at                                   DateTime? @db.Timestamp(0)
  created_at                                DateTime? @db.DateTime(0)
  updated_at                                DateTime? @db.DateTime(0)
  users_notifications_user_idTousers        users?    @relation("notifications_user_idTousers", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "notifications_user_id_foreign")
  users_notifications_user_to_notifyTousers users     @relation("notifications_user_to_notifyTousers", fields: [user_to_notify], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "notifications_user_to_notify_foreign")

  @@index([user_id], map: "notifications_user_id_foreign")
  @@index([user_to_notify], map: "notifications_user_to_notify_foreign")
}

model organism_groups {
  id              String    @id @unique(map: "organism_groups_id_unique") @db.VarChar(255)
  organism_id     String    @db.VarChar(255)
  group_id        String    @db.VarChar(255)
  created_by_user String    @db.VarChar(255)
  created_at      DateTime? @db.DateTime(0)
  updated_at      DateTime? @db.DateTime(0)
  users           users     @relation(fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "organism_groups_created_by_user_foreign")
  groups          groups    @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "organism_groups_group_id_foreign")
  organisms       organisms @relation(fields: [organism_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "organism_groups_organism_id_foreign")

  @@index([created_by_user], map: "organism_groups_created_by_user_foreign")
  @@index([group_id], map: "organism_groups_group_id_foreign")
  @@index([organism_id], map: "organism_groups_organism_id_foreign")
}

model organism_templates {
  id          Int        @id @default(autoincrement()) @db.UnsignedInt
  organism_id String?    @db.VarChar(255)
  template_id String     @db.VarChar(255)
  created_at  DateTime?  @db.DateTime(0)
  updated_at  DateTime?  @db.DateTime(0)
  organisms   organisms? @relation(fields: [organism_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "organism_templates_organism_id_foreign")
  templates   templates  @relation(fields: [template_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "organism_templates_template_id_foreign")

  @@index([organism_id], map: "organism_templates_organism_id_foreign")
  @@index([template_id], map: "organism_templates_template_id_foreign")
}

model organisms {
  id                                         String                                       @id @unique(map: "organisms_id_unique") @db.VarChar(255)
  name                                       String?                                      @db.VarChar(254)
  description                                String?                                      @db.Text
  sigla                                      String?                                      @unique(map: "organisms_sigla_unique") @db.VarChar(20)
  related_organism                           String?                                      @db.VarChar(255)
  is_deleted                                 Boolean?                                     @default(false)
  created_at                                 DateTime?                                    @db.DateTime(0)
  updated_at                                 DateTime?                                    @db.DateTime(0)
  created_by_user                            String?                                      @db.VarChar(255)
  users                                      users?                                       @relation(fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "organisms_created_by_user_foreign")
  bi_11matriz_teste_resub                    bi_11matriz_teste_resub[]
  bi_8_fornecedores                          bi_8_fornecedores[]
  bi_actividades                             bi_actividades[]
  bi_cronograma_financeiros                  bi_cronograma_financeiros[]
  bi_ficha_identificacao_de_projectos_fips   bi_ficha_identificacao_de_projectos_fips[]
  bi_fontes_de_financiamentos                bi_fontes_de_financiamentos[]
  bi_matriz01                                bi_matriz01[]
  bi_matriz_teste                            bi_matriz_teste[]
  bi_plano_desenvolvimento_nacional_20182022 bi_plano_desenvolvimento_nacional_20182022[]
  bi_relatorio_de_actividades                bi_relatorio_de_actividades[]
  bi_relatorio_de_projectos                  bi_relatorio_de_projectos[]
  bi_teste02                                 bi_teste02[]
  bi_teste03                                 bi_teste03[]
  blacklists                                 blacklists[]
  organism_groups                            organism_groups[]
  organism_templates                         organism_templates[]
  roles                                      roles[]
  unlock_requests                            unlock_requests[]
  user_organisms                             user_organisms[]

  @@index([created_by_user], map: "organisms_created_by_user_foreign")
}

model permission_role {
  id            Int          @id @default(autoincrement()) @db.UnsignedInt
  permission_id String?      @db.VarChar(255)
  role_id       String?      @db.VarChar(255)
  created_at    DateTime?    @db.DateTime(0)
  updated_at    DateTime?    @db.DateTime(0)
  permissions   permissions? @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "permission_role_permission_id_foreign")
  roles         roles?       @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "permission_role_role_id_foreign")

  @@index([permission_id], map: "permission_role_permission_id_index")
  @@index([role_id], map: "permission_role_role_id_index")
}

model permission_user {
  id            Int          @id @default(autoincrement()) @db.UnsignedInt
  permission_id String?      @db.VarChar(255)
  user_id       String?      @db.VarChar(255)
  created_at    DateTime?    @db.DateTime(0)
  updated_at    DateTime?    @db.DateTime(0)
  permissions   permissions? @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "permission_user_permission_id_foreign")
  users         users?       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "permission_user_user_id_foreign")

  @@index([permission_id], map: "permission_user_permission_id_index")
  @@index([user_id], map: "permission_user_user_id_index")
}

model permissions {
  id              String            @id @unique(map: "permissions_id_unique") @db.VarChar(255)
  slug            String            @unique(map: "permissions_slug_unique") @db.VarChar(255)
  name            String            @unique(map: "permissions_name_unique") @db.VarChar(255)
  description     String?           @db.Text
  entity          String?           @db.Text
  app             permissions_app?  @default(ALL)
  created_at      DateTime?         @db.DateTime(0)
  updated_at      DateTime?         @db.DateTime(0)
  menus           menus[]
  permission_role permission_role[]
  permission_user permission_user[]
}

model role_user {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  role_id    String?   @db.VarChar(255)
  user_id    String?   @db.VarChar(255)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime? @db.DateTime(0)
  roles      roles?    @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "role_user_role_id_foreign")
  users      users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "role_user_user_id_foreign")

  @@index([role_id], map: "role_user_role_id_index")
  @@index([user_id], map: "role_user_user_id_index")
}

model roles {
  id              String            @id @unique(map: "roles_id_unique") @db.VarChar(255)
  slug            String            @unique(map: "roles_slug_unique") @db.VarChar(255)
  name            String            @unique(map: "roles_name_unique") @db.VarChar(255)
  app             roles_app?        @default(ALL)
  system          Boolean?          @default(false)
  description     String?           @db.Text
  organism_id     String?           @db.VarChar(255)
  created_at      DateTime?         @db.DateTime(0)
  updated_at      DateTime?         @db.DateTime(0)
  organisms       organisms?        @relation(fields: [organism_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "roles_organism_id_foreign")
  permission_role permission_role[]
  role_user       role_user[]

  @@index([organism_id], map: "roles_organism_id_foreign")
}

model schedules {
  id                String                @id @unique(map: "schedules_id_unique") @db.VarChar(255)
  date              DateTime?             @db.DateTime(0)
  interval          String?               @db.VarChar(255)
  recurrence        schedules_recurrence? @default(month)
  mode              schedules_mode        @default(optional)
  is_deleted        Boolean?              @default(false)
  created_at        DateTime?             @db.DateTime(0)
  updated_at        DateTime?             @db.DateTime(0)
  submission_window Int?
  next_date         DateTime?             @db.Date
  until_date        DateTime?             @db.Date
  column            String?               @db.VarChar(255)
  year              Int?
  templates         templates[]
}

model session_sockets {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  user_id    String    @db.VarChar(255)
  socket_id  String    @db.VarChar(255)
  token      String    @db.Text
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime? @db.DateTime(0)
  users      users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "session_sockets_user_id_foreign")

  @@index([user_id], map: "session_sockets_user_id_foreign")
}

model states {
  id         String    @id @db.VarChar(255)
  name       String    @db.VarChar(255)
  code       String    @unique(map: "states_code_unique") @db.VarChar(255)
  capital    String    @db.VarChar(255)
  latitude   Decimal?  @db.Decimal(11, 9)
  longitude  Decimal?  @db.Decimal(11, 9)
  country_id String    @db.VarChar(255)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime? @db.DateTime(0)
  countries  countries @relation(fields: [country_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "states_country_id_foreign")
  cities     cities[]

  @@index([code], map: "states_code_index")
  @@index([country_id], map: "states_country_id_index")
}

model status {
  name                                       String                                       @db.VarChar(255)
  slug                                       String                                       @id @unique(map: "status_slug_unique") @db.VarChar(255)
  created_at                                 DateTime?                                    @db.DateTime(0)
  updated_at                                 DateTime?                                    @db.DateTime(0)
  bi_11matriz_teste_resub                    bi_11matriz_teste_resub[]
  bi_8_fornecedores                          bi_8_fornecedores[]
  bi_actividades                             bi_actividades[]
  bi_cronograma_financeiros                  bi_cronograma_financeiros[]
  bi_ficha_identificacao_de_projectos_fips   bi_ficha_identificacao_de_projectos_fips[]
  bi_fontes_de_financiamentos                bi_fontes_de_financiamentos[]
  bi_matriz01                                bi_matriz01[]
  bi_matriz_teste                            bi_matriz_teste[]
  bi_plano_desenvolvimento_nacional_20182022 bi_plano_desenvolvimento_nacional_20182022[]
  bi_relatorio_de_actividades                bi_relatorio_de_actividades[]
  bi_relatorio_de_projectos                  bi_relatorio_de_projectos[]
  bi_teste02                                 bi_teste02[]
  bi_teste03                                 bi_teste03[]
  template_histories                         template_histories[]
  unlock_requests                            unlock_requests[]

  @@index([slug], map: "status_slug_index")
}

model system_application_setups {
  id              String    @id @db.VarChar(255)
  setup           Json
  created_by_user String?   @db.VarChar(255)
  is_deleted      Boolean?  @default(false)
  created_at      DateTime? @db.DateTime(0)
  updated_at      DateTime? @db.DateTime(0)
  users           users?    @relation(fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "system_application_setups_created_by_user_foreign")

  @@index([created_by_user], map: "system_application_setups_created_by_user_foreign")
  @@index([id], map: "system_application_setups_id_index")
}

model system_dashboard_items {
  id            String                      @id @unique(map: "system_dashboard_items_id_unique") @db.VarChar(255)
  title         String                      @db.VarChar(255)
  description   String?                     @db.VarChar(255)
  color         String?                     @db.VarChar(255)
  icon          String?                     @db.VarChar(255)
  model_id      String?                     @db.VarChar(255)
  app           system_dashboard_items_app? @default(core)
  is_deleted    Boolean?                    @default(false)
  created_at    DateTime?                   @db.DateTime(0)
  updated_at    DateTime?                   @db.DateTime(0)
  options       Json?
  system_models system_models?              @relation(fields: [model_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "system_dashboard_items_model_id_foreign")

  @@index([model_id], map: "system_dashboard_items_model_id_foreign")
}

model system_model_fields {
  id              String        @id @unique(map: "system_model_fields_id_unique") @db.VarChar(255)
  display_name    String        @db.VarChar(255)
  field_name      String        @db.VarChar(255)
  allow_to_charts String?       @db.VarChar(255)
  system_model_id String        @db.VarChar(255)
  created_at      DateTime?     @db.DateTime(0)
  updated_at      DateTime?     @db.DateTime(0)
  related_to      String?       @db.VarChar(255)
  pluck_key       String?       @db.VarChar(255)
  compare_key     String?       @db.VarChar(255)
  system_models   system_models @relation(fields: [system_model_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "system_model_fields_system_model_id_foreign")

  @@index([system_model_id], map: "system_model_fields_system_model_id_foreign")
}

model system_models {
  id                     String                   @id @unique(map: "system_models_id_unique") @db.VarChar(255)
  display_name           String                   @db.VarChar(255)
  model_name             String                   @unique(map: "system_models_model_name_unique") @db.VarChar(255)
  contains_is_deleted    Boolean?                 @default(true)
  description            String?                  @db.Text
  is_deleted             Boolean?                 @default(false)
  created_at             DateTime?                @db.DateTime(0)
  updated_at             DateTime?                @db.DateTime(0)
  system_dashboard_items system_dashboard_items[]
  system_model_fields    system_model_fields[]
}

model system_report_generateds {
  id                                                      Int                              @id @default(autoincrement()) @db.UnsignedInt
  report_url                                              String?                          @db.VarChar(255)
  report_date                                             String?                          @db.VarChar(255)
  project_name                                            String?                          @db.VarChar(255)
  report_where                                            String?                          @db.VarChar(255)
  report_options                                          Json?
  created_by_user                                         String                           @db.VarChar(255)
  created_at                                              DateTime?                        @db.DateTime(0)
  updated_at                                              DateTime?                        @db.DateTime(0)
  report_model_id                                         String?                          @db.VarChar(255)
  status                                                  system_report_generateds_status? @default(pending)
  validated_by_user                                       String?                          @db.VarChar(255)
  approved_by_user                                        String?                          @db.VarChar(255)
  dataReport                                              String?                          @db.Text
  users_system_report_generateds_approved_by_userTousers  users?                           @relation("system_report_generateds_approved_by_userTousers", fields: [approved_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "system_report_generateds_approved_by_user_foreign")
  users_system_report_generateds_created_by_userTousers   users                            @relation("system_report_generateds_created_by_userTousers", fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "system_report_generateds_created_by_user_foreign")
  users_system_report_generateds_validated_by_userTousers users?                           @relation("system_report_generateds_validated_by_userTousers", fields: [validated_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "system_report_generateds_validated_by_user_foreign")

  @@index([approved_by_user], map: "system_report_generateds_approved_by_user_foreign")
  @@index([created_by_user], map: "system_report_generateds_created_by_user_foreign")
  @@index([validated_by_user], map: "system_report_generateds_validated_by_user_foreign")
}

model system_reports {
  id              String    @id @unique(map: "system_reports_id_unique") @db.VarChar(255)
  config          Json?
  fill_model      Json?
  report_url      String    @db.VarChar(255)
  report_merge    Json?
  created_by_user String?   @db.VarChar(255)
  name            String?   @db.VarChar(255)
  thumb           String?   @db.VarChar(255)
  is_deleted      Boolean?  @default(false)
  created_at      DateTime? @db.DateTime(0)
  updated_at      DateTime? @db.DateTime(0)
  users           users?    @relation(fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "system_reports_created_by_user_foreign")

  @@index([created_by_user], map: "system_reports_created_by_user_foreign")
}

model template_drafts {
  id                  String              @id @unique(map: "template_drafts_id_unique") @db.VarChar(255)
  fields              Json
  template_id         String              @db.VarChar(255)
  created_by_user     String              @db.VarChar(255)
  created_at          DateTime?           @db.DateTime(0)
  updated_at          DateTime?           @db.DateTime(0)
  template_history_id Int?                @db.UnsignedInt
  year                Int?
  users               users               @relation(fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "template_drafts_created_by_user_foreign")
  template_histories  template_histories? @relation(fields: [template_history_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "template_drafts_template_history_id_foreign")
  templates           templates           @relation(fields: [template_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "template_drafts_template_id_foreign")

  @@index([created_by_user], map: "template_drafts_created_by_user_foreign")
  @@index([template_history_id], map: "template_drafts_template_history_id_foreign")
  @@index([template_id], map: "template_drafts_template_id_foreign")
}

model template_groups {
  id              String    @id @unique(map: "template_groups_id_unique") @db.VarChar(255)
  template_id     String    @db.VarChar(255)
  group_id        String    @db.VarChar(255)
  created_by_user String    @db.VarChar(255)
  created_at      DateTime? @db.DateTime(0)
  updated_at      DateTime? @db.DateTime(0)
  users           users     @relation(fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "template_groups_created_by_user_foreign")
  groups          groups    @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "template_groups_group_id_foreign")
  templates       templates @relation(fields: [template_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "template_groups_template_id_foreign")

  @@index([created_by_user], map: "template_groups_created_by_user_foreign")
  @@index([group_id], map: "template_groups_group_id_foreign")
  @@index([template_id], map: "template_groups_template_id_foreign")
}

model template_histories {
  id                                Int                                 @id @default(autoincrement()) @db.UnsignedInt
  template_id                       String?                             @db.VarChar(255)
  user_id                           String?                             @db.VarChar(255)
  app_key                           String?                             @db.VarChar(255)
  organism_id                       String?                             @db.VarChar(255)
  status                            String?                             @db.VarChar(255)
  expired_at                        DateTime?                           @db.DateTime(0)
  mongodb_id                        String?                             @db.VarChar(255)
  line                              String?                             @db.VarChar(255)
  submission_id                     String                              @db.VarChar(255)
  submission_type                   template_histories_submission_type? @default(form)
  history_id                        Int?                                @db.UnsignedInt
  message                           String?                             @db.Text
  error                             Json?
  created_at                        DateTime?                           @db.DateTime(0)
  updated_at                        DateTime?                           @db.DateTime(0)
  validated_by_user                 String?                             @db.VarChar(255)
  status_statusTotemplate_histories status?                             @relation(fields: [status], references: [slug], onDelete: NoAction, onUpdate: NoAction, map: "template_histories_status_foreign")
  transactions                      transactions                        @relation(fields: [submission_id], references: [submission_id], onDelete: NoAction, onUpdate: NoAction, map: "template_histories_submission_id_foreign")
  users                             users?                              @relation(fields: [validated_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "template_histories_validated_by_user_foreign")
  template_drafts                   template_drafts[]

  @@index([status], map: "template_histories_status_foreign")
  @@index([submission_id], map: "template_histories_submission_id_foreign")
  @@index([validated_by_user], map: "template_histories_validated_by_user_foreign")
}

model templates {
  id                                                                          String                                       @id @unique(map: "templates_id_unique") @db.VarChar(255)
  name                                                                        String                                       @db.VarChar(254)
  slug                                                                        String?                                      @db.VarChar(255)
  extra_validation                                                            Boolean?                                     @default(false)
  is_matrix                                                                   Boolean?                                     @default(false)
  description                                                                 String?                                      @db.Text
  published                                                                   Boolean?                                     @default(false)
  published_at                                                                DateTime?                                    @db.DateTime(0)
  template_demo                                                               String?                                      @db.Text
  is_accumulative                                                             Boolean?                                     @default(false)
  is_deleted                                                                  Boolean?                                     @default(false)
  created_at                                                                  DateTime?                                    @db.DateTime(0)
  updated_at                                                                  DateTime?                                    @db.DateTime(0)
  created_by_user                                                             String?                                      @db.VarChar(255)
  history_id                                                                  String?                                      @db.VarChar(255)
  arithmetic_operations                                                       templates_arithmetic_operations?
  is_active                                                                   Boolean?                                     @default(true)
  units_id                                                                    String?                                      @db.VarChar(255)
  schedule_id                                                                 String?                                      @db.VarChar(255)
  users                                                                       users?                                       @relation(fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "templates_created_by_user_foreign")
  schedules                                                                   schedules?                                   @relation(fields: [schedule_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "templates_schedule_id_foreign")
  units                                                                       units?                                       @relation(fields: [units_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "templates_units_id_foreign")
  am_projects                                                                 am_projects[]
  am_reports                                                                  am_reports[]
  bi_11matriz_teste_resub                                                     bi_11matriz_teste_resub[]
  bi_8_fornecedores                                                           bi_8_fornecedores[]
  bi_actividades                                                              bi_actividades[]
  bi_cronograma_financeiros                                                   bi_cronograma_financeiros[]
  bi_ficha_identificacao_de_projectos_fips                                    bi_ficha_identificacao_de_projectos_fips[]
  bi_fontes_de_financiamentos                                                 bi_fontes_de_financiamentos[]
  bi_matriz01                                                                 bi_matriz01[]
  bi_matriz_teste                                                             bi_matriz_teste[]
  bi_plano_desenvolvimento_nacional_20182022                                  bi_plano_desenvolvimento_nacional_20182022[]
  bi_relatorio_de_actividades                                                 bi_relatorio_de_actividades[]
  bi_relatorio_de_projectos                                                   bi_relatorio_de_projectos[]
  bi_teste02                                                                  bi_teste02[]
  bi_teste03                                                                  bi_teste03[]
  blacklists                                                                  blacklists[]
  fields                                                                      fields[]
  organism_templates                                                          organism_templates[]
  template_drafts                                                             template_drafts[]
  template_groups                                                             template_groups[]
  templates_relationships_templatesTotemplates_relationships_from_template_id templates_relationships[]                    @relation("templatesTotemplates_relationships_from_template_id")
  templates_relationships_templatesTotemplates_relationships_to_template_id   templates_relationships[]                    @relation("templatesTotemplates_relationships_to_template_id")
  unlock_requests                                                             unlock_requests[]

  @@index([created_by_user], map: "templates_created_by_user_foreign")
  @@index([schedule_id], map: "templates_schedule_id_foreign")
  @@index([units_id], map: "templates_units_id_foreign")
}

model templates_relationships {
  id                                                            Int        @id @default(autoincrement()) @db.UnsignedInt
  from_field_id                                                 String?    @db.VarChar(255)
  from_template_id                                              String?    @db.VarChar(255)
  to_field_id                                                   String?    @db.VarChar(255)
  to_template_id                                                String?    @db.VarChar(255)
  created_at                                                    DateTime?  @db.DateTime(0)
  updated_at                                                    DateTime?  @db.DateTime(0)
  fields_fieldsTotemplates_relationships_from_field_id          fields?    @relation("fieldsTotemplates_relationships_from_field_id", fields: [from_field_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "templates_relationships_from_field_id_foreign")
  templates_templatesTotemplates_relationships_from_template_id templates? @relation("templatesTotemplates_relationships_from_template_id", fields: [from_template_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "templates_relationships_from_template_id_foreign")
  fields_fieldsTotemplates_relationships_to_field_id            fields?    @relation("fieldsTotemplates_relationships_to_field_id", fields: [to_field_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "templates_relationships_to_field_id_foreign")
  templates_templatesTotemplates_relationships_to_template_id   templates? @relation("templatesTotemplates_relationships_to_template_id", fields: [to_template_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "templates_relationships_to_template_id_foreign")

  @@index([from_field_id], map: "templates_relationships_from_field_id_index")
  @@index([from_template_id], map: "templates_relationships_from_template_id_index")
  @@index([to_field_id], map: "templates_relationships_to_field_id_index")
  @@index([to_template_id], map: "templates_relationships_to_template_id_index")
}

model tokens {
  id         String    @id @unique(map: "tokens_id_unique") @db.VarChar(255)
  user_id    String?   @db.VarChar(255)
  token      String    @unique(map: "tokens_token_unique") @db.VarChar(255)
  type       String    @db.VarChar(80)
  is_revoked Boolean?  @default(false)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime? @db.DateTime(0)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tokens_user_id_foreign")

  @@index([token], map: "tokens_token_index")
  @@index([user_id], map: "tokens_user_id_foreign")
}

model transactions {
  submission_id      String               @id @unique(map: "transactions_submission_id_unique") @db.VarChar(255)
  created_at         DateTime?            @db.DateTime(0)
  updated_at         DateTime?            @db.DateTime(0)
  template_histories template_histories[]

  @@index([submission_id], map: "transactions_submission_id_index")
}

model units {
  id              String      @id @unique(map: "units_id_unique") @db.VarChar(255)
  name            String      @db.VarChar(255)
  natures_id      String      @db.VarChar(255)
  created_by_user String      @db.VarChar(255)
  is_disabled     Boolean?    @default(false)
  created_at      DateTime?   @db.DateTime(0)
  updated_at      DateTime?   @db.DateTime(0)
  is_deleted      Boolean?    @default(false)
  users           users       @relation(fields: [created_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "units_created_by_user_foreign")
  natures         natures     @relation(fields: [natures_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "units_natures_id_foreign")
  templates       templates[]

  @@index([created_by_user], map: "units_created_by_user_foreign")
  @@index([natures_id], map: "units_natures_id_foreign")
}

model unlock_requests {
  id                                             String                   @id @unique(map: "unlock_requests_id_unique") @db.VarChar(255)
  submission_window                              Int?
  expire_in                                      DateTime?                @db.Date
  user_observation                               String?                  @db.Text
  user_id                                        String                   @db.VarChar(255)
  validated_by_user                              String?                  @db.VarChar(255)
  validator_observation                          String?                  @db.Text
  status                                         String                   @default("pending") @db.VarChar(255)
  contract                                       unlock_requests_contract @default(ressubmission_form)
  payload                                        String                   @db.Text
  organism_id                                    String                   @db.VarChar(255)
  template_id                                    String                   @db.VarChar(255)
  created_at                                     DateTime?                @db.DateTime(0)
  updated_at                                     DateTime?                @db.DateTime(0)
  organisms                                      organisms                @relation(fields: [organism_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "unlock_requests_organism_id_foreign")
  status_statusTounlock_requests                 status                   @relation(fields: [status], references: [slug], onDelete: NoAction, onUpdate: NoAction, map: "unlock_requests_status_foreign")
  templates                                      templates                @relation(fields: [template_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "unlock_requests_template_id_foreign")
  users_unlock_requests_user_idTousers           users                    @relation("unlock_requests_user_idTousers", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "unlock_requests_user_id_foreign")
  users_unlock_requests_validated_by_userTousers users?                   @relation("unlock_requests_validated_by_userTousers", fields: [validated_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "unlock_requests_validated_by_user_foreign")

  @@index([organism_id], map: "unlock_requests_organism_id_foreign")
  @@index([status], map: "unlock_requests_status_foreign")
  @@index([template_id], map: "unlock_requests_template_id_foreign")
  @@index([user_id], map: "unlock_requests_user_id_foreign")
  @@index([validated_by_user], map: "unlock_requests_validated_by_user_foreign")
}

model user_organisms {
  id          String     @id @unique(map: "user_organisms_id_unique") @db.VarChar(255)
  user_id     String?    @db.VarChar(255)
  organism_id String?    @db.VarChar(255)
  created_at  DateTime?  @db.DateTime(0)
  updated_at  DateTime?  @db.DateTime(0)
  is_admin    Boolean?   @default(false)
  organisms   organisms? @relation(fields: [organism_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_organisms_organism_id_foreign")
  users       users?     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_organisms_user_id_foreign")

  @@index([organism_id], map: "user_organisms_organism_id_foreign")
  @@index([user_id], map: "user_organisms_user_id_foreign")
}

model users {
  id                                                                         String                                       @id @unique(map: "users_id_unique") @db.VarChar(255)
  name                                                                       String?                                      @db.VarChar(254)
  email                                                                      String                                       @unique(map: "users_email_unique") @db.VarChar(80)
  contato                                                                    Int?
  password                                                                   String                                       @db.VarChar(60)
  force_change_password                                                      Boolean?                                     @default(false)
  is_active                                                                  Boolean?                                     @default(false)
  created_at                                                                 DateTime?                                    @db.DateTime(0)
  updated_at                                                                 DateTime?                                    @db.DateTime(0)
  deleted_at                                                                 DateTime?                                    @db.DateTime(0)
  mail_notifications                                                         Boolean?                                     @default(true)
  am_checklist_schedule_projects                                             am_checklist_schedule_projects[]
  am_checklists                                                              am_checklists[]
  am_item_checklists                                                         am_item_checklists[]
  am_notes                                                                   am_notes[]
  am_projects                                                                am_projects[]
  am_reports                                                                 am_reports[]
  am_schedule_project_notes                                                  am_schedule_project_notes[]
  am_schedule_types                                                          am_schedule_types[]
  am_schedules_am_schedules_created_by_userTousers                           am_schedules[]                               @relation("am_schedules_created_by_userTousers")
  am_schedules_am_schedules_user_idTousers                                   am_schedules[]                               @relation("am_schedules_user_idTousers")
  am_visit_participants_am_visit_participants_created_by_userTousers         am_visit_participants[]                      @relation("am_visit_participants_created_by_userTousers")
  am_visit_participants_am_visit_participants_user_idTousers                 am_visit_participants[]                      @relation("am_visit_participants_user_idTousers")
  am_visit_types                                                             am_visit_types[]
  applications                                                               applications[]
  bi_11matriz_teste_resub                                                    bi_11matriz_teste_resub[]
  bi_8_fornecedores                                                          bi_8_fornecedores[]
  bi_actividades                                                             bi_actividades[]
  bi_cronograma_financeiros                                                  bi_cronograma_financeiros[]
  bi_ficha_identificacao_de_projectos_fips                                   bi_ficha_identificacao_de_projectos_fips[]
  bi_fontes_de_financiamentos                                                bi_fontes_de_financiamentos[]
  bi_matriz01                                                                bi_matriz01[]
  bi_matriz_teste                                                            bi_matriz_teste[]
  bi_plano_desenvolvimento_nacional_20182022                                 bi_plano_desenvolvimento_nacional_20182022[]
  bi_relatorio_de_actividades                                                bi_relatorio_de_actividades[]
  bi_relatorio_de_projectos                                                  bi_relatorio_de_projectos[]
  bi_teste02                                                                 bi_teste02[]
  bi_teste03                                                                 bi_teste03[]
  fields                                                                     fields[]
  files                                                                      files[]
  groups                                                                     groups[]
  natures                                                                    natures[]
  notifications_notifications_user_idTousers                                 notifications[]                              @relation("notifications_user_idTousers")
  notifications_notifications_user_to_notifyTousers                          notifications[]                              @relation("notifications_user_to_notifyTousers")
  organism_groups                                                            organism_groups[]
  organisms                                                                  organisms[]
  permission_user                                                            permission_user[]
  role_user                                                                  role_user[]
  session_sockets                                                            session_sockets[]
  system_application_setups                                                  system_application_setups[]
  system_report_generateds_system_report_generateds_approved_by_userTousers  system_report_generateds[]                   @relation("system_report_generateds_approved_by_userTousers")
  system_report_generateds_system_report_generateds_created_by_userTousers   system_report_generateds[]                   @relation("system_report_generateds_created_by_userTousers")
  system_report_generateds_system_report_generateds_validated_by_userTousers system_report_generateds[]                   @relation("system_report_generateds_validated_by_userTousers")
  system_reports                                                             system_reports[]
  template_drafts                                                            template_drafts[]
  template_groups                                                            template_groups[]
  template_histories                                                         template_histories[]
  templates                                                                  templates[]
  tokens                                                                     tokens[]
  units                                                                      units[]
  unlock_requests_unlock_requests_user_idTousers                             unlock_requests[]                            @relation("unlock_requests_user_idTousers")
  unlock_requests_unlock_requests_validated_by_userTousers                   unlock_requests[]                            @relation("unlock_requests_validated_by_userTousers")
  user_organisms                                                             user_organisms[]
}

enum am_notes_type {
  text
  file
}

enum am_schedule_project_notes_type {
  text
  file
}

enum am_schedule_projects_status {
  pending
  running
  done
  canceled
}

enum blacklists_status {
  blocked
  unblocked
}

enum components_type {
  normal
  enum
}

enum fields_matrix_type {
  column
  row
}

enum fields_type {
  STRING
  NUMBER
  BOOLEAN
  ENUM
  DATE
  OBJECT
  RELATION
  COMPONENT
  FILE
  GEOLOCATION
}

enum menus_plataform {
  core
  operators
  all
}

enum permissions_app {
  ALL
  core
}

enum roles_app {
  ALL
  core
}

enum schedules_recurrence {
  none
  hour
  day
  week
  month
  year
}

enum schedules_mode {
  optional
  required
}

enum system_dashboard_items_app {
  core
  operators
}

enum system_report_generateds_status {
  draft
  pending
  rejected
  validated
  approved
}

enum template_histories_submission_type {
  form
  file
  app
}

enum templates_arithmetic_operations {
  none
  AVG
  MEDIAN
  SUM
  MAX
  MIN
}

enum unlock_requests_contract {
  ressubmission_form
  ressubmission_matrix
  unlock_year
  unlock_column_matrix
}
